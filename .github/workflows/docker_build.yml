name: Docker Image CI

on:
  push:
    branches: 
      - '**'
  pull_request:
    branches: 
      - '**'
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set Docker Tag
      id: docker_tag
      run: |
        echo "tag=$(date +%s)" >> $GITHUB_ENV
        echo "docker_tag=${{ env.tag:-latest }}" >> $GITHUB_ENV  # Fallback to 'latest' if empty

    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ${{ secrets.DOCKER_USERNAME }}/${{ github.repository }}:${{ env.docker_tag }}

    - name: Verify Docker image locally
      run: docker images --format '{{.Repository}}:{{.Tag}}' | grep ${{ secrets.DOCKER_USERNAME }}/${{ github.repository }}:${{ env.docker_tag }}

  push:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    needs: build  # Ensures 'push' job runs only after 'build' succeeds
    steps:
    - uses: actions/checkout@v4

    - name: Log in to Docker Hub
      env:
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

    - name: Tag and Push the Docker image to Docker Hub
      run: |
        docker tag ${{ secrets.DOCKER_USERNAME }}/${{ github.repository }}:${{ env.docker_tag }} $DOCKER_USERNAME/${{ github.repository }}:${{ github.event.release.tag_name }}
        docker push $DOCKER_USERNAME/${{ github.repository }}:${{ github.event.release.tag_name }}

    - name: Verify Docker image on Docker Hub
      run: |
        docker pull $DOCKER_USERNAME/${{ github.repository }}:${{ github.event.release.tag_name }}
        docker inspect $DOCKER_USERNAME/${{ github.repository }}:${{ github.event.release.tag_name }}
