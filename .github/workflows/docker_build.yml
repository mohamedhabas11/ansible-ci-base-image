name: Docker Image CI

on:
  push:
    branches: 
      - '**'
  pull_request:
    branches: 
      - '**'
  release:
    types: [created]
  workflow_dispatch: # Allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image_id: ${{ steps.capture_image.outputs.image_id }} # Expose image_id to push job
    steps:
    - uses: actions/checkout@v4

    - name: Set Docker Tag
      run: |
        if [ "${{ github.event_name }}" == "release" ]; then
          echo "docker_tag=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
        else
          short_sha=$(git rev-parse --short HEAD)
          echo "docker_tag=$short_sha" >> $GITHUB_ENV
        fi

    - name: Build Docker Image
      run: docker build . --file Dockerfile --tag ${{ secrets.DOCKER_USERNAME }}/${{ github.repository }}:${{ env.docker_tag }}

    - name: Capture Image ID
      id: capture_image # Set an ID for this step to reference later
      run: |
        image_id=$(docker images -q ${{ secrets.DOCKER_USERNAME }}/${{ github.repository }}:${{ env.docker_tag }})
        echo "::set-output name=image_id::$image_id" # Correctly set output

    - name: Verify Docker Image Locally
      run: docker images --format '{{.Repository}}:{{.Tag}}' | grep ${{ secrets.DOCKER_USERNAME }}/${{ github.repository }}:${{ env.docker_tag }}

  push:
    if: github.event_name == 'release' # Only runs on release events
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Tag and Push the Docker Image to Docker Hub
      run: |
        docker tag ${{ needs.build.outputs.image_id }} ${{ secrets.DOCKER_USERNAME }}/${{ github.repository }}:${{ github.event.release.tag_name }}
        docker push ${{ secrets.DOCKER_USERNAME }}/${{ github.repository }}:${{ github.event.release.tag_name }}

    - name: Verify Docker Image on Docker Hub
      run: |
        docker pull ${{ secrets.DOCKER_USERNAME }}/${{ github.repository }}:${{ github.event.release.tag_name }}
        docker inspect ${{ secrets.DOCKER_USERNAME }}/${{ github.repository }}:${{ github.event.release.tag_name }}
